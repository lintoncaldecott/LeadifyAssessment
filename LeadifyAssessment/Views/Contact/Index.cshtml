@using PagedList.Mvc;
@using PagedList;
@model PagedList.IPagedList<LeadifyAssessment.DataLayer.Models.ContactModel>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<div class="table-border">
    <h2>Your contacts</h2>
    <div>
        @using (Html.BeginForm("Index", "Contact", FormMethod.Get))
        {
            <p>
                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" />
            </p>
        }
        <table class="table jumbotronContacts table-font">
            <tr>
                <th>
                    @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    Last Name
                </th>
                <th>
                    Contact Number
                </th>
                <th>
                    Email
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CellPhone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ContactId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ContactId }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ContactId })
                    </td>
                </tr>
            }

        </table>
        <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>

        @*<div class="table-border">
                <h2>Your contacts</h2>
                <div>
                    <table class="table jumbotronContacts table-font">
                        <tr class="table-header">
                            <th>
                                @Html.DisplayNameFor(model => model.FirstName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.LastName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CellPhone)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Email)
                            </th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CellPhone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ContactId }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.ContactId }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ContactId })
                                </td>
                            </tr>
                        }

                    </table>
                    <p>
                        <div class="round-button"><div class="round-button-circle"><a href="@Url.Action("Create", "Contact")">Add</a></div></div>
                    </p>
                </div>
            </div>*@
